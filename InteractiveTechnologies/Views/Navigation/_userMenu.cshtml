@model InteractiveTechnologies.Models.MembersPage
@using InteractiveTechnologies.Models;
@using Microsoft.AspNet.Identity;
@{
    InteractiveTechEntities db = new InteractiveTechEntities();
}



@{


            //var pageRole = db.MembersPages.Any(s => s.AspNetRole.Id == page).ToString();


            var user = (from v in db.AspNetUsers
                        select v.Id).ToString();
            //user IDs

            //var userRole = db.AspNetRoles.Where(s => s.AspNetUsers.Any(c => c.Id == user));

            //var userRole = (from s in db.AspNetRoles
            //                from c in s.AspNetUsers
            //                where c.Id == user
            //                select s.AspNetUsers);

            //gets roles for a user





            //GOAL: select the role(s) that the current user has and display them as a nav bar item



            //get the user role

            var roleName = (from x in db.AspNetRoles
                            select x.Name).FirstOrDefault(); //any roleName





            var roleId = (from x in db.AspNetRoles select x.Id).FirstOrDefault();









            var userId = System.Web.HttpContext.Current.User.Identity.GetUserId();


            var userRolesOnPages = (from x in db.MembersPages
                                    join y in db.AspNetRoles on x.RoleId equals y.Id
                                    select x);




            var Roles = db.AspNetUsers.SelectMany(c => c.AspNetRoles); //select all roles

            var Role2 = db.AspNetRoles.SelectMany(c => c.AspNetUsers);


            var currentUsersRoles = Roles.Where(c => c.AspNetUsers.Any(x => x.Id == userId)); //current Users Roles



            var cur = (from x in currentUsersRoles
                       select x.Name).FirstOrDefault(); //current users role Name

            var t = (from x in Role2
                     select x.AspNetRoles).FirstOrDefault();



            var usermem = (from x in userRolesOnPages
                           from y in currentUsersRoles
                           where x.AspNetRole.Id == y.Id
                           select x);


            var res = from x in usermem
                      group x by x.AspNetRole.Id
                      into groups
                      select groups.OrderByDescending(p => p.DateCreated).FirstOrDefault();







            //foreach (var x in usermem)
            //{


            foreach (var y in res) //individual user role
            {
                if (User.IsInRole(y.AspNetRole.Name))
                {




                    <li>
                        <a class="ajax-link" href="~/MembersPages/Details/@y.PageID">@y.AspNetRole.Name</a>
                    </li>

                }
}
        }



        @*}*@
    












